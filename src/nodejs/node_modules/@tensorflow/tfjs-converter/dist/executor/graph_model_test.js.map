{"version":3,"file":"graph_model_test.js","sourceRoot":"","sources":["../../src/executor/graph_model_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {io, scalar} from '@tensorflow/tfjs-core';\n\nimport * as tensorflow from '../data/compiled_api';\nimport {deregisterOp, registerOp} from '../operations/custom_op/register';\nimport {GraphNode} from '../operations/types';\n\nimport {GraphModel, loadGraphModel} from './graph_model';\n\nconst HOST = 'http://example.org';\nconst MODEL_URL = `${HOST}/model.json`;\nconst RELATIVE_MODEL_URL = '/path/model.pb';\nlet model: GraphModel;\nconst bias = tfc.tensor1d([1], 'int32');\n\nconst weightsManifest: tfc.io.WeightsManifestEntry[] =\n    [{'name': 'Const', 'dtype': 'int32', 'shape': [1]}];\n\nconst weightsManifestWithInitializer: tfc.io.WeightsManifestEntry[] = [\n  {'dtype': 'string', 'name': 'transform/keys', 'shape': [1]},\n  {'dtype': 'float32', 'name': 'transform/values', 'shape': [1]}\n];\n\nconst SIMPLE_MODEL: tensorflow.IGraphDef = {\n  node: [\n    {\n      name: 'Input',\n      op: 'Placeholder',\n      attr: {\n        dtype: {\n          type: tensorflow.DataType.DT_INT32,\n        },\n        shape: {shape: {dim: [{size: -1}, {size: 1}]}}\n      }\n    },\n    {\n      name: 'Const',\n      op: 'Const',\n      attr: {\n        dtype: {type: tensorflow.DataType.DT_INT32},\n        value: {\n          tensor: {\n            dtype: tensorflow.DataType.DT_INT32,\n            tensorShape: {dim: [{size: 1}]},\n          }\n        },\n        index: {i: 0},\n        length: {i: 4}\n      }\n    },\n    {name: 'Add1', op: 'Add', input: ['Input', 'Const'], attr: {}},\n    {name: 'Add', op: 'Add', input: ['Add1', 'Const'], attr: {}}\n  ],\n  versions: {producer: 1.0, minConsumer: 3}\n};\n\nconst CONTROL_FLOW_MODEL: tensorflow.IGraphDef = {\n  node: [\n    {\n      name: 'Input',\n      op: 'Placeholder',\n      attr: {\n        dtype: {\n          type: tensorflow.DataType.DT_INT32,\n        },\n        shape: {shape: {dim: [{size: -1}, {size: 1}]}}\n      }\n    },\n    {name: 'Enter', op: 'Enter', attr: {}, input: ['Input']},\n  ],\n  versions: {producer: 1.0, minConsumer: 3}\n};\n\nconst DYNAMIC_SHAPE_MODEL: tensorflow.IGraphDef = {\n  node: [\n    {\n      name: 'Input',\n      op: 'Placeholder',\n      attr: {\n        dtype: {\n          type: tensorflow.DataType.DT_BOOL,\n        },\n        shape: {shape: {dim: [{size: -1}, {size: 1}]}}\n      }\n    },\n    {name: 'Where', op: 'Where', attr: {}, input: ['Input']}\n  ],\n  versions: {producer: 1.0, minConsumer: 3}\n};\n\nconst SIGNATURE: tensorflow.ISignatureDef = {\n  inputs: {x: {name: 'Input:0', dtype: tensorflow.DataType.DT_INT32}},\n  outputs: {y: {name: 'Add:0', dtype: tensorflow.DataType.DT_INT32}}\n};\nconst SIMPLE_HTTP_MODEL_LOADER = {\n  load: async () => {\n    return {\n      modelTopology: SIMPLE_MODEL,\n      weightSpecs: weightsManifest,\n      weightData: bias.dataSync(),\n      format: 'tfjs-graph-model',\n      generatedBy: '1.15',\n      convertedBy: '1.3.1',\n      userDefinedMetadata: {signature: SIGNATURE}\n    };\n  }\n};\n\nconst CUSTOM_OP_MODEL: tensorflow.IGraphDef = {\n  node: [\n    {\n      name: 'Input',\n      op: 'Placeholder',\n      attr: {\n        dtype: {\n          type: tensorflow.DataType.DT_INT32,\n        },\n        shape: {shape: {dim: [{size: -1}, {size: 1}]}}\n      }\n    },\n    {\n      name: 'Const',\n      op: 'Const',\n      attr: {\n        dtype: {type: tensorflow.DataType.DT_INT32},\n        value: {\n          tensor: {\n            dtype: tensorflow.DataType.DT_INT32,\n            tensorShape: {dim: [{size: 1}]},\n          }\n        },\n        index: {i: 0},\n        length: {i: 4}\n      }\n    },\n    {name: 'Add1', op: 'Add', input: ['Input', 'Const'], attr: {}},\n    {name: 'CustomOp', op: 'CustomOp', input: ['Add1'], attr: {}}\n  ],\n  versions: {producer: 1.0, minConsumer: 3}\n};\n\nconst CUSTOM_HTTP_MODEL_LOADER = {\n  load: async () => {\n    return {\n      modelTopology: CUSTOM_OP_MODEL,\n      weightSpecs: weightsManifest,\n      weightData: bias.dataSync(),\n      format: 'tfjs-graph-model',\n      generatedBy: '1.15',\n      convertedBy: '1.3.1'\n    };\n  }\n};\n\nconst CONTROL_SIGNATURE: tensorflow.ISignatureDef = {\n  inputs: {x: {name: 'Input:0', dtype: tensorflow.DataType.DT_INT32}},\n  outputs: {y: {name: 'Enter:0', dtype: tensorflow.DataType.DT_INT32}}\n};\nconst CONTROL_FLOW_HTTP_MODEL_LOADER = {\n  load: async () => {\n    return {\n      modelTopology: CONTROL_FLOW_MODEL,\n      weightSpecs: weightsManifest,\n      weightData: bias.dataSync(),\n      userDefinedMetadata: {signature: CONTROL_SIGNATURE},\n      format: 'tfjs-graph-model',\n      generatedBy: '1.15',\n      convertedBy: '1.3.1'\n    };\n  }\n};\n\nconst INITIALIZER_GRAPHDEF: tensorflow.IGraphDef = {\n  node: [\n    {\n      name: 'transform/values',\n      op: 'Const',\n      attr: {\n        dtype: {type: tensorflow.DataType.DT_FLOAT},\n        value: {\n          tensor: {\n            dtype: tensorflow.DataType.DT_FLOAT,\n            tensorShape: {dim: [{size: 1}]}\n          }\n        }\n      }\n    },\n    {\n      name: 'transform/keys',\n      op: 'Const',\n      attr: {\n        dtype: {type: tensorflow.DataType.DT_STRING},\n        value: {\n          tensor: {\n            dtype: tensorflow.DataType.DT_STRING,\n            tensorShape: {dim: [{size: 1}]}\n          }\n        }\n      }\n    },\n    {\n      name: 'transform/hash_table',\n      op: 'HashTableV2',\n      attr: {\n        value_dtype: {type: tensorflow.DataType.DT_FLOAT},\n        use_node_name_sharing: {b: false},\n        key_dtype: {type: tensorflow.DataType.DT_STRING},\n        container: {s: ''},\n        shared_name: {s: 'tablename'}\n      }\n    },\n    {\n      name: 'transform/key_value_init/LookupTableImportV2',\n      op: 'LookupTableImportV2',\n      input: ['transform/hash_table', 'transform/keys', 'transform/values'],\n      attr: {\n        Tin: {type: tensorflow.DataType.DT_FLOAT},\n        Tout: {type: tensorflow.DataType.DT_STRING}\n      }\n    }\n  ],\n  versions: {producer: 1.0, minConsumer: 3}\n};\n\nconst HASH_TABLE_MODEL: tensorflow.IGraphDef = {\n  node: [\n    {\n      name: 'Input',\n      op: 'Placeholder',\n      attr: {\n        dtype: {\n          type: tensorflow.DataType.DT_STRING,\n        },\n        shape: {shape: {dim: [{size: 1}]}}\n      }\n    },\n    {\n      name: 'Input_1',\n      op: 'Placeholder',\n      attr: {\n        dtype: {\n          type: tensorflow.DataType.DT_FLOAT,\n        },\n        shape: {shape: {dim: [{size: 1}]}}\n      }\n    },\n    {\n      name: 'transform/hash_table',\n      op: 'HashTableV2',\n      input: [],\n      attr: {\n        value_dtype: {type: tensorflow.DataType.DT_FLOAT},\n        use_node_name_sharing: {b: false},\n        key_dtype: {type: tensorflow.DataType.DT_STRING},\n        container: {s: ''},\n        shared_name: {s: 'tablename'}\n      }\n    },\n    {\n      name: 'LookupTableFindV2',\n      op: 'LookupTableFindV2',\n      input: ['transform/hash_table', 'Input', 'Input_1'],\n      attr: {}\n    }\n  ],\n  versions: {producer: 1.0, minConsumer: 3}\n};\n\nconst HASH_TABLE_SIGNATURE: tensorflow.ISignatureDef = {\n  inputs: {\n    keys: {name: 'Input:0', dtype: tensorflow.DataType.DT_STRING},\n    defaultValues: {name: 'Input_1:0', dtype: tensorflow.DataType.DT_FLOAT}\n  },\n  outputs: {\n    values:\n        {name: 'LookupTableFindV2:0', dtype: tensorflow.DataType.DT_FLOAT}\n  }\n};\nconst HASHTABLE_HTTP_MODEL_LOADER = {\n  load: async () => {\n    return {\n      modelTopology: HASH_TABLE_MODEL,\n      weightSpecs: weightsManifestWithInitializer,\n      weightData: new ArrayBuffer(16),\n      format: 'tfjs-graph-model',\n      generatedBy: '1.15',\n      convertedBy: '2.4',\n      userDefinedMetadata: {signature: HASH_TABLE_SIGNATURE},\n      modelInitializer: INITIALIZER_GRAPHDEF\n    };\n  }\n};\n\nclass IOHandlerForTest implements tfc.io.IOHandler {\n  savedArtifacts: tfc.io.ModelArtifacts;\n\n  async save(modelArtifacts: tfc.io.ModelArtifacts):\n      Promise<tfc.io.SaveResult> {\n    this.savedArtifacts = modelArtifacts;\n    return {modelArtifactsInfo: null};\n  }\n}\n\ndescribe('loadSync', () => {\n  let artifacts: io.ModelArtifacts;\n\n  beforeEach(() => {\n    model = new GraphModel(MODEL_URL);\n    artifacts = {\n      format: 'graph-model',\n      generatedBy: '0.0.0',\n      modelTopology: SIMPLE_MODEL,\n      weightSpecs: weightsManifest,\n      weightData: new Int32Array([5]).buffer\n    };\n  });\n\n  it('Can load old model.', () => {\n    artifacts.convertedBy = 'TensorFlow.js Converter v1.3.2';\n    artifacts.userDefinedMetadata = {signature: SIGNATURE};\n    const loaded = model.loadSync(artifacts);\n\n    expect(loaded).toBe(true);\n    expect(model.modelSignature).toEqual(SIGNATURE);\n  });\n\n  it('Can load new model.', () => {\n    artifacts.convertedBy = 'TensorFlow.js Converter v2.8.0';\n    artifacts.signature = SIGNATURE;\n    const loaded = model.loadSync(artifacts);\n\n    expect(loaded).toBe(true);\n    expect(model.modelSignature).toEqual(SIGNATURE);\n  });\n\n  it('Can load model without signature.', () => {\n    const loaded = model.loadSync(artifacts);\n\n    expect(loaded).toBe(true);\n    expect(model.modelSignature).toBeUndefined();\n  });\n\n  it('Can load model with different convertedBy language.', () => {\n    artifacts.convertedBy = '1.3.2';\n    artifacts.userDefinedMetadata = {signature: SIGNATURE};\n    const loaded = model.loadSync(artifacts);\n\n    expect(loaded).toBe(true);\n    expect(model.modelSignature).toEqual(SIGNATURE);\n  });\n});\n\ndescribe('loadGraphModel', () => {\n  it('Pass a custom io handler', async () => {\n    const customLoader: tfc.io.IOHandler = {\n      load: async () => {\n        return {\n          modelTopology: SIMPLE_MODEL,\n          weightSpecs: weightsManifest,\n          weightData: new Int32Array([5]).buffer,\n        };\n      }\n    };\n    const model = await loadGraphModel(customLoader);\n    expect(model).toBeDefined();\n    const bias = model.weights['Const'][0];\n    expect(bias.dtype).toBe('int32');\n    expect(bias.dataSync()).toEqual(new Int32Array([5]));\n  });\n\n  it('Expect an error when moderUrl is null', async () => {\n    let errorMsg = 'no error';\n    try {\n      await loadGraphModel(null);\n    } catch (err) {\n      errorMsg = err.message;\n    }\n    expect(errorMsg).toMatch(/modelUrl in loadGraphModel\\(\\) cannot be null/);\n  });\n\n  it('Pass a fetchFunc', async () => {\n    const fetchFunc = () => {};\n    spyOn(tfc.io, 'getLoadHandlers').and.returnValue([\n      CUSTOM_HTTP_MODEL_LOADER\n    ]);\n    await loadGraphModel(MODEL_URL, {fetchFunc});\n    expect(tfc.io.getLoadHandlers).toHaveBeenCalledWith(MODEL_URL, {fetchFunc});\n  });\n});\n\ndescribe('Model', () => {\n  beforeEach(() => {\n    model = new GraphModel(MODEL_URL);\n  });\n\n  describe('custom model', () => {\n    beforeEach(() => {\n      spyOn(tfc.io, 'getLoadHandlers').and.returnValue([\n        CUSTOM_HTTP_MODEL_LOADER\n      ]);\n      registerOp('CustomOp', (nodeValue: GraphNode) => {\n        const x = nodeValue.inputs[0];\n        return [tfc.add(x, scalar(1, 'int32'))];\n      });\n    });\n    afterEach(() => deregisterOp('CustomOp'));\n    it('load', async () => {\n      const loaded = await model.load();\n      expect(loaded).toBe(true);\n    });\n\n    describe('predict', () => {\n      it('should generate the output for single tensor', async () => {\n        await model.load();\n        const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n        const output = model.predict(input);\n        expect((output as tfc.Tensor).dataSync()[0]).toEqual(3);\n      });\n    });\n\n    describe('save', () => {\n      it('should call the save io handler', async () => {\n        await model.load();\n        const handler = new IOHandlerForTest();\n\n        await model.save(handler);\n        expect(handler.savedArtifacts.format).toEqual('tfjs-graph-model');\n        expect(handler.savedArtifacts.generatedBy).toEqual('1.15');\n        expect(handler.savedArtifacts.convertedBy).toEqual('1.3.1');\n        expect(handler.savedArtifacts.modelTopology).toEqual(CUSTOM_OP_MODEL);\n        expect(handler.savedArtifacts.weightSpecs).toEqual(weightsManifest);\n        tfc.test_util.expectArraysClose(\n            new Int32Array(handler.savedArtifacts.weightData), bias.dataSync());\n      });\n    });\n  });\n\n  describe('simple model', () => {\n    beforeEach(() => {\n      spyOn(tfc.io, 'getLoadHandlers').and.returnValue([\n        SIMPLE_HTTP_MODEL_LOADER\n      ]);\n      spyOn(tfc.io, 'browserHTTPRequest')\n          .and.returnValue(SIMPLE_HTTP_MODEL_LOADER);\n    });\n    it('load', async () => {\n      const loaded = await model.load();\n      expect(loaded).toBe(true);\n    });\n\n    describe('save', () => {\n      it('should call the save io handler', async () => {\n        await model.load();\n        const handler = new IOHandlerForTest();\n\n        await model.save(handler);\n        expect(handler.savedArtifacts.format).toEqual('tfjs-graph-model');\n        expect(handler.savedArtifacts.generatedBy).toEqual('1.15');\n        expect(handler.savedArtifacts.convertedBy).toEqual('1.3.1');\n        expect(handler.savedArtifacts.modelTopology).toEqual(SIMPLE_MODEL);\n        expect(handler.savedArtifacts.userDefinedMetadata).toEqual({\n          signature: SIGNATURE\n        });\n        expect(handler.savedArtifacts.weightSpecs).toEqual(weightsManifest);\n        tfc.test_util.expectArraysClose(\n            new Int32Array(handler.savedArtifacts.weightData), bias.dataSync());\n      });\n    });\n\n    describe('predict', () => {\n      it('should generate the output for single tensor', async () => {\n        await model.load();\n        const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n        const output = model.predict(input);\n        expect((output as tfc.Tensor).dataSync()[0]).toEqual(3);\n      });\n\n      it('should support signature keys', async () => {\n        await model.load();\n        const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n        const output = model.predict({x: input});\n        expect((output as tfc.Tensor).dataSync()[0]).toEqual(3);\n      });\n\n      it('should generate the output for tensor array', async () => {\n        await model.load();\n        const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n        const output = model.predict([input]);\n        expect((output as tfc.Tensor).dataSync()[0]).toEqual(3);\n      });\n\n      it('should generate the output for tensor map', async () => {\n        await model.load();\n        const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n        const output = model.predict({'Input': input});\n        expect((output as tfc.Tensor).dataSync()[0]).toEqual(3);\n      });\n\n      it('should throw error if wrong signature key is used', async () => {\n        await model.load();\n        const input = tfc.tensor1d([1], 'int32');\n        expect(() => model.predict({x1: input})).toThrow();\n      });\n\n      it('should throw error if input size mismatch', async () => {\n        await model.load();\n        const input = tfc.tensor1d([1], 'int32');\n        expect(() => model.predict([input, input])).toThrow();\n      });\n\n      it('should throw exception if inputs shapes do not match', () => {\n        const input = tfc.tensor2d([1, 1], [1, 2], 'int32');\n        expect(() => model.predict([input])).toThrow();\n      });\n\n      it('should throw exception if inputs dtype does not match graph', () => {\n        const input = tfc.tensor1d([1], 'float32');\n        expect(() => model.predict([input])).toThrow();\n      });\n    });\n\n    describe('execute', () => {\n      it('should generate the default output', async () => {\n        await model.load();\n        const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n        const output = model.execute({'Input': input});\n        expect((output as tfc.Tensor).dataSync()[0]).toEqual(3);\n      });\n      it('should allow signature keys', async () => {\n        await model.load();\n        const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n        const output = model.execute({x: input}, ['y']);\n        expect((output as tfc.Tensor).dataSync()[0]).toEqual(3);\n      });\n      it('should generate the output array', async () => {\n        await model.load();\n        const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n        const output = model.execute({'Input': input}, ['Add', 'Const']);\n        expect(Array.isArray(output)).toBeTruthy();\n        expect((output as tfc.Tensor[])[0].dataSync()[0]).toEqual(3);\n        expect((output as tfc.Tensor[])[1].dataSync()[0]).toEqual(1);\n      });\n      it('should throw exception if inputs shapes do not match', () => {\n        const input = tfc.tensor2d([1, 1], [1, 2], 'int32');\n        expect(() => model.execute([input])).toThrow();\n      });\n\n      it('should throw exception if inputs dtype does not match graph', () => {\n        const input = tfc.tensor2d([1, 1], [2, 1], 'float32');\n        expect(() => model.predict([input])).toThrow();\n      });\n\n      it('should throw error if input size mismatch', async () => {\n        await model.load();\n        const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n\n        expect(() => model.execute([input, input])).toThrow();\n      });\n\n      it('should allow feed intermediate node', async () => {\n        await model.load();\n        const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n        const output = model.execute({'Add1': input}) as tfc.Tensor;\n        tfc.test_util.expectArraysClose(await output.data(), [2, 2]);\n      });\n      it('should allow feed intermediate node with index', async () => {\n        await model.load();\n        const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n        const output = model.execute({'Add1:0': input}) as tfc.Tensor;\n        tfc.test_util.expectArraysClose(await output.data(), [2, 2]);\n      });\n    });\n\n    describe('dispose', () => {\n      it('should dispose the weights', async () => {\n        const numOfTensors = tfc.memory().numTensors;\n        model = new GraphModel(MODEL_URL);\n\n        await model.load();\n        model.dispose();\n\n        expect(tfc.memory().numTensors).toEqual(numOfTensors);\n      });\n    });\n\n    describe('getVersion', () => {\n      it('should return the version info from the tf model', async () => {\n        await model.load();\n        expect(model.modelVersion).toEqual('1.3');\n      });\n    });\n\n    describe('relative path', () => {\n      beforeEach(() => {\n        model = new GraphModel(RELATIVE_MODEL_URL);\n      });\n\n      it('load', async () => {\n        const loaded = await model.load();\n        expect(loaded).toBe(true);\n      });\n    });\n\n    it('should loadGraphModel', async () => {\n      const model = await loadGraphModel(MODEL_URL);\n      expect(model).not.toBeUndefined();\n    });\n\n    it('should loadGraphModel with request options', async () => {\n      const model = await loadGraphModel(\n          MODEL_URL, {requestInit: {credentials: 'include'}});\n      expect(tfc.io.browserHTTPRequest).toHaveBeenCalledWith(MODEL_URL, {\n        requestInit: {credentials: 'include'}\n      });\n      expect(model).not.toBeUndefined();\n    });\n\n    it('should call loadGraphModel for TfHub Module', async () => {\n      const url = `${HOST}/model/1`;\n      const model = await loadGraphModel(url, {fromTFHub: true});\n      expect(model).toBeDefined();\n    });\n\n    describe('InferenceModel interface', () => {\n      it('should expose inputs', async () => {\n        await model.load();\n        expect(model.inputs).toEqual([\n          {name: 'Input', shape: [-1, 1], dtype: 'int32'}\n        ]);\n      });\n      it('should expose outputs', async () => {\n        await model.load();\n        expect(model.outputs).toEqual([\n          {name: 'Add', shape: undefined, dtype: undefined}\n        ]);\n      });\n    });\n  });\n\n  describe('control flow model', () => {\n    beforeEach(() => {\n      spyOn(tfc.io, 'getLoadHandlers').and.returnValue([\n        CONTROL_FLOW_HTTP_MODEL_LOADER\n      ]);\n      spyOn(tfc.io, 'browserHTTPRequest')\n          .and.returnValue(CONTROL_FLOW_HTTP_MODEL_LOADER);\n    });\n\n    describe('save', () => {\n      it('should call the save io handler', async () => {\n        await model.load();\n        const handler = new IOHandlerForTest();\n\n        await model.save(handler);\n        expect(handler.savedArtifacts.format).toEqual('tfjs-graph-model');\n        expect(handler.savedArtifacts.generatedBy).toEqual('1.15');\n        expect(handler.savedArtifacts.convertedBy).toEqual('1.3.1');\n        expect(handler.savedArtifacts.modelTopology)\n            .toEqual(CONTROL_FLOW_MODEL);\n        expect(handler.savedArtifacts.userDefinedMetadata).toEqual({\n          signature: CONTROL_SIGNATURE\n        });\n        expect(handler.savedArtifacts.weightSpecs).toEqual(weightsManifest);\n        tfc.test_util.expectArraysClose(\n            new Int32Array(handler.savedArtifacts.weightData), bias.dataSync());\n      });\n    });\n\n    it('should throw error if call predict directly', async () => {\n      await model.load();\n      const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n\n      expect(() => model.predict([input])).toThrow();\n    });\n\n    it('should throw error if call execute directly', async () => {\n      await model.load();\n      const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n\n      expect(() => model.predict([input])).toThrow();\n    });\n\n    it('should be success if call executeAsync', async () => {\n      await model.load();\n      const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n      const res = await model.executeAsync([input]);\n      expect(res).not.toBeNull();\n    });\n\n    it('should be success if call executeAsync with signature keys',\n       async () => {\n         await model.load();\n         const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n         const res = await model.executeAsync({x: input}, ['y']);\n         expect(res).not.toBeNull();\n       });\n\n    it('should allow feed intermediate node with executeAsync', async () => {\n      await model.load();\n      const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n      const res = await model.executeAsync({Enter: input});\n      expect(res).not.toBeNull();\n    });\n  });\n  const DYNAMIC_SIGNATURE: tensorflow.ISignatureDef = {\n    inputs: {x: {name: 'Input:0', dtype: tensorflow.DataType.DT_INT32}},\n    outputs: {y: {name: 'Where:0', dtype: tensorflow.DataType.DT_INT32}}\n  };\n  const DYNAMIC_HTTP_MODEL_LOADER = {\n    load: async () => {\n      return {\n        modelTopology: DYNAMIC_SHAPE_MODEL,\n        weightSpecs: weightsManifest,\n        weightData: bias.dataSync(),\n        userDefinedMetadata: {signature: DYNAMIC_SIGNATURE}\n      };\n    }\n  };\n  const DYNAMIC_HTTP_MODEL_NEW_LOADER = {\n    load: async () => {\n      return {\n        convertedBy: '2.8',\n        modelTopology: DYNAMIC_SHAPE_MODEL,\n        weightSpecs: weightsManifest,\n        weightData: bias.dataSync(),\n        signature: DYNAMIC_SIGNATURE,\n        userDefinedMetadata: {metadata1: {a: '1'}}\n      };\n    }\n  };\n  describe('dynamic shape model', () => {\n    beforeEach(() => {\n      spyOn(tfc.io, 'getLoadHandlers').and.returnValue([\n        DYNAMIC_HTTP_MODEL_LOADER\n      ]);\n      spyOn(tfc.io, 'browserHTTPRequest')\n          .and.returnValue(DYNAMIC_HTTP_MODEL_LOADER);\n    });\n\n    it('should throw error if call predict directly', async () => {\n      await model.load();\n      const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n\n      expect(() => model.predict([input])).toThrow();\n    });\n\n    it('should throw error if call execute directly', async () => {\n      await model.load();\n      const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n\n      expect(() => model.execute([input])).toThrow();\n    });\n\n    it('should be success if call executeAsync', async () => {\n      await model.load();\n      const input = tfc.tensor2d([1, 1], [2, 1], 'bool');\n      const res = await model.executeAsync([input]);\n      expect(res).not.toBeNull();\n    });\n\n    it('should be success if call executeAsync with signature key',\n       async () => {\n         await model.load();\n         const input = tfc.tensor2d([1, 1], [2, 1], 'bool');\n         const res = await model.executeAsync({x: input}, ['y']);\n         expect(res).not.toBeNull();\n       });\n\n    it('should allow feed intermediate node with executeAsync', async () => {\n      await model.load();\n      const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n      const res = await model.executeAsync({Where: input});\n      expect(res).not.toBeNull();\n    });\n  });\n  describe('dynamic shape model with metadata', () => {\n    beforeEach(() => {\n      spyOn(tfc.io, 'getLoadHandlers').and.returnValue([\n        DYNAMIC_HTTP_MODEL_NEW_LOADER\n      ]);\n      spyOn(tfc.io, 'browserHTTPRequest')\n          .and.returnValue(DYNAMIC_HTTP_MODEL_NEW_LOADER);\n    });\n\n    it('should be success if call executeAsync with signature key',\n       async () => {\n         await model.load();\n         const input = tfc.tensor2d([1, 1], [2, 1], 'bool');\n         const res = await model.executeAsync({x: input}, ['y']);\n         expect(res).not.toBeNull();\n         expect(model.metadata).toEqual({metadata1: {a: '1'}});\n       });\n\n    it('should allow feed intermediate node with executeAsync', async () => {\n      await model.load();\n      const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n      const res = await model.executeAsync({Where: input});\n      expect(res).not.toBeNull();\n    });\n  });\n\n  describe('Hashtable model', () => {\n    beforeEach(() => {\n      spyOn(tfc.io, 'getLoadHandlers').and.returnValue([\n        HASHTABLE_HTTP_MODEL_LOADER\n      ]);\n      spyOn(tfc.io, 'browserHTTPRequest')\n          .and.returnValue(HASHTABLE_HTTP_MODEL_LOADER);\n    });\n    it('should be successful if call executeAsync', async () => {\n      await model.load();\n      const keys = tfc.tensor1d(['a'], 'string');\n      const defaultValues = tfc.tensor1d([0]);\n      const res = await model.executeAsync({keys, defaultValues});\n      expect(res).not.toBeNull();\n    });\n  });\n});\n\ndescribe('Graph execution gives actionable errors', () => {\n  it('executeAsync warns when there are no dynamic ops', async () => {\n    const customLoader: tfc.io.IOHandler = {\n      load: async () => ({\n        modelTopology: SIMPLE_MODEL,\n        weightSpecs: weightsManifest,\n        weightData: new Int32Array([5]).buffer,\n      })\n    };\n    const model = await loadGraphModel(customLoader);\n    spyOn(console, 'warn');\n    const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n    await model.executeAsync(input);\n    expect(console.warn).toHaveBeenCalledTimes(1);\n    expect(console.warn)\n        .toHaveBeenCalledWith(\n            'This model execution did not contain any nodes with control ' +\n            'flow or dynamic output shapes. You can use model.execute() ' +\n            'instead.');\n  });\n\n  it('executeAsync does not warn when there are dynamic ops', async () => {\n    const customLoader: tfc.io.IOHandler = {\n      load: async () => ({\n        modelTopology: CONTROL_FLOW_MODEL,\n        weightSpecs: weightsManifest,\n        weightData: new Int32Array([5]).buffer,\n      })\n    };\n    const model = await loadGraphModel(customLoader);\n    spyOn(console, 'warn');\n    const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n    await model.executeAsync(input);\n    expect(console.warn).toHaveBeenCalledTimes(0);\n  });\n\n  it('executeAsync warns when the subgraph has no dynamic ops', async () => {\n    const graphDef: tensorflow.IGraphDef = {\n      node: [\n        {name: 'input', op: 'Placeholder'},\n        {name: 'intermediate', op: 'Enter', input: ['input']},\n        {name: 'intermediate2', op: 'Sqrt', input: ['intermediate']},\n        {name: 'output', op: 'Square', input: ['intermediate2']},\n      ],\n      versions: {producer: 1.0, minConsumer: 3}\n    };\n    const customLoader: tfc.io.IOHandler = {\n      load: async () => ({\n        modelTopology: graphDef,\n        weightSpecs: weightsManifest,\n        weightData: new Int32Array([5]).buffer,\n      })\n    };\n    const model = await loadGraphModel(customLoader);\n    spyOn(console, 'warn');\n    const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n    await model.executeAsync({'intermediate2': input});\n    expect(console.warn).toHaveBeenCalledTimes(1);\n    expect(console.warn)\n        .toHaveBeenCalledWith(\n            'This model execution did not contain any nodes with control ' +\n            'flow or dynamic output shapes. You can use model.execute() ' +\n            'instead.');\n  });\n\n  it('executeAsync works when the subgraph has no unknown ops', async () => {\n    const graphDef: tensorflow.IGraphDef = {\n      node: [\n        {name: 'input', op: 'Placeholder'},\n        {name: 'intermediate', op: 'Unknown', input: ['input']},\n        {name: 'intermediate2', op: 'Sqrt', input: ['intermediate']},\n        {name: 'output', op: 'Square', input: ['intermediate2']},\n      ],\n      versions: {producer: 1.0, minConsumer: 3}\n    };\n    const customLoader: tfc.io.IOHandler = {\n      load: async () => ({\n        modelTopology: graphDef,\n        weightSpecs: weightsManifest,\n        weightData: new Int32Array([5]).buffer,\n      })\n    };\n    const model = await loadGraphModel(customLoader);\n    spyOn(console, 'warn');\n    const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n    await model.executeAsync({'intermediate2': input});\n  });\n\n  it('executeAsync throws when the subgraph has unknown ops', async () => {\n    const graphDef: tensorflow.IGraphDef = {\n      node: [\n        {name: 'input', op: 'Placeholder'},\n        {name: 'intermediate', op: 'Unknown', input: ['input']},\n        {name: 'intermediate2', op: 'Sqrt', input: ['intermediate']},\n        {name: 'output', op: 'Square', input: ['intermediate2']},\n      ],\n      versions: {producer: 1.0, minConsumer: 3}\n    };\n    const customLoader: tfc.io.IOHandler = {\n      load: async () => ({\n        modelTopology: graphDef,\n        weightSpecs: weightsManifest,\n        weightData: new Int32Array([5]).buffer,\n      })\n    };\n    const model = await loadGraphModel(customLoader);\n    const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n    try {\n      await model.executeAsync({'input': input});\n      throw new Error('Previous line should throw');\n    } catch (ex) {\n      expect((ex as Error).message)\n          .toBe(\n              'Unknown op \\'Unknown\\'. File an issue at ' +\n              'https://github.com/tensorflow/tfjs/issues so we can add it, ' +\n              'or register a custom execution with tf.registerOp()');\n    }\n  });\n\n  it('execute fails when there are dynamic ops', async () => {\n    const customLoader: tfc.io.IOHandler = {\n      load: async () => ({\n        modelTopology: CONTROL_FLOW_MODEL,\n        weightSpecs: weightsManifest,\n        weightData: new Int32Array([5]).buffer,\n      })\n    };\n    const model = await loadGraphModel(customLoader);\n    const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n    expect(() => model.execute(input))\n        .toThrowError(/This execution contains the node 'Enter'/);\n  });\n\n  it('execute does not warn when there are no dynamic ops', async () => {\n    const customLoader: tfc.io.IOHandler = {\n      load: async () => ({\n        modelTopology: SIMPLE_MODEL,\n        weightSpecs: weightsManifest,\n        weightData: new Int32Array([5]).buffer,\n      })\n    };\n    const model = await loadGraphModel(customLoader);\n    spyOn(console, 'warn');\n    const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n    model.execute(input);\n    expect(console.warn).toHaveBeenCalledTimes(0);\n  });\n\n  it('execute err when there are no dynamic ops', async () => {\n    const customLoader: tfc.io.IOHandler = {\n      load: async () => ({\n        modelTopology: SIMPLE_MODEL,\n        weightSpecs: weightsManifest,\n        weightData: new Int32Array([5]).buffer,\n      })\n    };\n    const model = await loadGraphModel(customLoader);\n    spyOn(console, 'warn');\n    const input = tfc.tensor2d([1, 1], [2, 1], 'int32');\n    model.execute(input);\n    expect(console.warn).toHaveBeenCalledTimes(0);\n  });\n});\n"]}