{"version":3,"file":"dynamic_executor_test.js","sourceRoot":"","sources":["../../../src/operations/executors/dynamic_executor_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {memory} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {ExecutionContext} from '../../executor/execution_context';\nimport * as dynamic from '../op_list/dynamic';\nimport {Node} from '../types';\n\nimport {executeOp} from './dynamic_executor';\nimport {createBoolAttr, createNumberAttrFromIndex, createTensorAttr, validateParam} from './test_helper';\n\ndescribe('dynamic', () => {\n  let node: Node;\n  const input1 = [tfOps.tensor1d([1])];\n  const context = new ExecutionContext({}, {}, {});\n\n  beforeEach(() => {\n    node = {\n      name: 'input1',\n      op: '',\n      category: 'dynamic',\n      inputNames: ['input1'],\n      inputs: [],\n      inputParams: {},\n      attrParams: {},\n      children: []\n    };\n  });\n\n  describe('executeOp', () => {\n    describe('NonMaxSuppressionV2', () => {\n      it('should return input', () => {\n        node.op = 'NonMaxSuppressionV2';\n        node.inputParams['boxes'] = createTensorAttr(0);\n        node.inputParams['scores'] = createTensorAttr(1);\n        node.inputParams['maxOutputSize'] = createNumberAttrFromIndex(2);\n        node.inputParams['iouThreshold'] = createNumberAttrFromIndex(3);\n        node.inputParams['scoreThreshold'] = createNumberAttrFromIndex(4);\n        node.inputNames = ['input1', 'input2', 'input3', 'input4', 'input5'];\n        const input2 = [tfOps.tensor1d([1])];\n        const input3 = [tfOps.tensor1d([1])];\n        const input4 = [tfOps.tensor1d([1])];\n        const input5 = [tfOps.tensor1d([1])];\n        spyOn(tfOps.image, 'nonMaxSuppressionAsync');\n        const result =\n            executeOp(node, {input1, input2, input3, input4, input5}, context);\n        expect(tfOps.image.nonMaxSuppressionAsync)\n            .toHaveBeenCalledWith(input1[0], input2[0], 1, 1, 1);\n        expect(result instanceof Promise).toBeTruthy();\n      });\n      it('should match json def', () => {\n        node.op = 'NonMaxSuppressionV2';\n        node.inputParams['boxes'] = createTensorAttr(0);\n        node.inputParams['scores'] = createTensorAttr(1);\n        node.inputParams['maxOutputSize'] = createNumberAttrFromIndex(2);\n        node.inputParams['iouThreshold'] = createNumberAttrFromIndex(3);\n        node.inputParams['scoreThreshold'] = createNumberAttrFromIndex(4);\n        node.inputNames = ['input1', 'input2', 'input3', 'input4', 'input5'];\n\n        expect(validateParam(node, dynamic.json, 'NonMaxSuppressionV3'))\n            .toBeTruthy();\n      });\n    });\n    describe('NonMaxSuppressionV3', () => {\n      it('should return input', () => {\n        node.op = 'NonMaxSuppressionV3';\n        node.inputParams['boxes'] = createTensorAttr(0);\n        node.inputParams['scores'] = createTensorAttr(1);\n        node.inputParams['maxOutputSize'] = createNumberAttrFromIndex(2);\n        node.inputParams['iouThreshold'] = createNumberAttrFromIndex(3);\n        node.inputParams['scoreThreshold'] = createNumberAttrFromIndex(4);\n        node.inputNames = ['input1', 'input2', 'input3', 'input4', 'input5'];\n        const input2 = [tfOps.tensor1d([1])];\n        const input3 = [tfOps.tensor1d([1])];\n        const input4 = [tfOps.tensor1d([1])];\n        const input5 = [tfOps.tensor1d([1])];\n        spyOn(tfOps.image, 'nonMaxSuppressionAsync');\n        const result =\n            executeOp(node, {input1, input2, input3, input4, input5}, context);\n        expect(tfOps.image.nonMaxSuppressionAsync)\n            .toHaveBeenCalledWith(input1[0], input2[0], 1, 1, 1);\n        expect(result instanceof Promise).toBeTruthy();\n      });\n      it('should match json def', () => {\n        node.op = 'NonMaxSuppressionV3';\n        node.inputParams['boxes'] = createTensorAttr(0);\n        node.inputParams['scores'] = createTensorAttr(1);\n        node.inputParams['maxOutputSize'] = createNumberAttrFromIndex(2);\n        node.inputParams['iouThreshold'] = createNumberAttrFromIndex(3);\n        node.inputParams['scoreThreshold'] = createNumberAttrFromIndex(4);\n        node.inputNames = ['input1', 'input2', 'input3', 'input4', 'input5'];\n\n        expect(validateParam(node, dynamic.json, 'NonMaxSuppressionV3'))\n            .toBeTruthy();\n      });\n    });\n\n    describe('NonMaxSuppressionV4', () => {\n      it('should return input', () => {\n        node.op = 'NonMaxSuppressionV4';\n        node.inputParams['boxes'] = createTensorAttr(0);\n        node.inputParams['scores'] = createTensorAttr(1);\n        node.inputParams['maxOutputSize'] = createNumberAttrFromIndex(2);\n        node.inputParams['iouThreshold'] = createNumberAttrFromIndex(3);\n        node.inputParams['scoreThreshold'] = createNumberAttrFromIndex(4);\n        node.attrParams['padToMaxOutputSize'] = createBoolAttr(true);\n        node.inputNames = ['input1', 'input2', 'input3', 'input4', 'input5'];\n        const input2 = [tfOps.tensor1d([1])];\n        const input3 = [tfOps.tensor1d([1])];\n        const input4 = [tfOps.tensor1d([1])];\n        const input5 = [tfOps.tensor1d([1])];\n        spyOn(tfOps.image, 'nonMaxSuppressionPaddedAsync').and.returnValue({});\n        const result =\n            executeOp(node, {input1, input2, input3, input4, input5}, context);\n        expect(tfOps.image.nonMaxSuppressionPaddedAsync)\n            .toHaveBeenCalledWith(input1[0], input2[0], 1, 1, 1, true);\n        expect(result instanceof Promise).toBeTruthy();\n      });\n      it('should match json def', () => {\n        node.op = 'NonMaxSuppressionV4';\n        node.inputParams['boxes'] = createTensorAttr(0);\n        node.inputParams['scores'] = createTensorAttr(1);\n        node.inputParams['maxOutputSize'] = createNumberAttrFromIndex(2);\n        node.inputParams['iouThreshold'] = createNumberAttrFromIndex(3);\n        node.inputParams['scoreThreshold'] = createNumberAttrFromIndex(4);\n        node.attrParams['padToMaxOutputSize'] = createBoolAttr(true);\n        node.inputNames = ['input1', 'input2', 'input3', 'input4', 'input5'];\n\n        expect(validateParam(node, dynamic.json, 'NonMaxSuppressionV4'))\n            .toBeTruthy();\n      });\n    });\n\n    describe('NonMaxSuppressionV5', () => {\n      it('should return input', () => {\n        node.op = 'NonMaxSuppressionV5';\n        node.inputParams['boxes'] = createTensorAttr(0);\n        node.inputParams['scores'] = createTensorAttr(1);\n        node.inputParams['maxOutputSize'] = createNumberAttrFromIndex(2);\n        node.inputParams['iouThreshold'] = createNumberAttrFromIndex(3);\n        node.inputParams['scoreThreshold'] = createNumberAttrFromIndex(4);\n        node.inputParams['softNmsSigma'] = createNumberAttrFromIndex(5);\n        node.inputNames =\n            ['input1', 'input2', 'input3', 'input4', 'input5', 'input6'];\n        const input2 = [tfOps.tensor1d([1])];\n        const input3 = [tfOps.tensor1d([1])];\n        const input4 = [tfOps.tensor1d([1])];\n        const input5 = [tfOps.tensor1d([1])];\n        const input6 = [tfOps.tensor1d([1])];\n        spyOn(tfOps.image, 'nonMaxSuppressionWithScoreAsync')\n            .and.returnValue({});\n        const result = executeOp(\n            node, {input1, input2, input3, input4, input5, input6}, context);\n        expect(tfOps.image.nonMaxSuppressionWithScoreAsync)\n            .toHaveBeenCalledWith(input1[0], input2[0], 1, 1, 1, 1);\n        expect(result instanceof Promise).toBeTruthy();\n      });\n      it('should match json def', () => {\n        node.op = 'NonMaxSuppressionV5';\n        node.inputParams['boxes'] = createTensorAttr(0);\n        node.inputParams['scores'] = createTensorAttr(1);\n        node.inputParams['maxOutputSize'] = createNumberAttrFromIndex(2);\n        node.inputParams['iouThreshold'] = createNumberAttrFromIndex(3);\n        node.inputParams['scoreThreshold'] = createNumberAttrFromIndex(4);\n        node.inputParams['softNmsSigma'] = createNumberAttrFromIndex(5);\n        node.inputNames =\n            ['input1', 'input2', 'input3', 'input4', 'input5', 'input6'];\n\n        expect(validateParam(node, dynamic.json, 'NonMaxSuppressionV5'))\n            .toBeTruthy();\n      });\n    });\n\n    describe('Where', () => {\n      it('should call tfOps.whereAsync', async () => {\n        node.op = 'Where';\n        node.inputParams = {'condition': createTensorAttr(0)};\n        const input1 = [tfOps.scalar(1)];\n        spyOn(tfOps, 'whereAsync');\n\n        const result = executeOp(node, {input1}, context);\n        expect(\n            (tfOps.whereAsync as jasmine.Spy).calls.mostRecent().args[0].dtype)\n            .toEqual('bool');\n        expect((tfOps.whereAsync as jasmine.Spy)\n                   .calls.mostRecent()\n                   .args[0]\n                   .arraySync())\n            .toEqual(1);\n        expect(result instanceof Promise).toBeTruthy();\n      });\n      it('should match json def', () => {\n        node.op = 'Where';\n        node.inputParams = {'condition': createTensorAttr(0)};\n\n        expect(validateParam(node, dynamic.json)).toBeTruthy();\n      });\n      it('should not have memory leak', async () => {\n        node.op = 'Where';\n        node.inputParams = {'condition': createTensorAttr(0)};\n        const input1 = [tfOps.scalar(1)];\n        spyOn(tfOps, 'whereAsync').and.callThrough();\n\n        const prevCount = memory().numTensors;\n        await executeOp(node, {input1}, context);\n        const afterCount = memory().numTensors;\n        expect(afterCount).toEqual(prevCount + 1);\n      });\n    });\n\n    describe('ListDiff', () => {\n      it('should call tfOps.setdiff1dAsync', async () => {\n        node.op = 'ListDiff';\n        node.inputNames = ['input1', 'input2'];\n        node.inputParams = {'x': createTensorAttr(0), 'y': createTensorAttr(1)};\n        const input1 = [tfOps.scalar(1)];\n        const input2 = [tfOps.scalar(1)];\n        spyOn(tfOps, 'setdiff1dAsync');\n\n        const result = executeOp(node, {input1, input2}, context);\n        expect(tfOps.setdiff1dAsync).toHaveBeenCalledWith(input1[0], input2[0]);\n        expect(result instanceof Promise).toBeTruthy();\n      });\n      it('should match json def', () => {\n        node.op = 'ListDiff';\n        node.inputNames = ['input1', 'input2'];\n        node.inputParams = {'x': createTensorAttr(0), 'y': createTensorAttr(1)};\n\n        expect(validateParam(node, dynamic.json)).toBeTruthy();\n      });\n    });\n  });\n});\n"]}