{"version":3,"file":"creation_executor_test.js","sourceRoot":"","sources":["../../../src/operations/executors/creation_executor_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {ExecutionContext} from '../../executor/execution_context';\nimport * as creation from '../op_list/creation';\nimport {Node} from '../types';\n\nimport {executeOp} from './creation_executor';\nimport {createDtypeAttr, createNumberAttr, createNumberAttrFromIndex, createNumericArrayAttrFromIndex, createTensorAttr, validateParam} from './test_helper';\n\ndescribe('creation', () => {\n  let node: Node;\n  const input1 = [tfOps.tensor1d([1, 2, 3])];\n  const input2 = [tfOps.scalar(1)];\n  const context = new ExecutionContext({}, {}, {});\n\n  beforeEach(() => {\n    node = {\n      name: 'test',\n      op: '',\n      category: 'creation',\n      inputNames: ['input1', 'input2'],\n      inputs: [],\n      inputParams: {},\n      attrParams: {},\n      children: []\n    };\n  });\n\n  describe('executeOp', () => {\n    describe('Fill', () => {\n      it('should call tfOps.fill', () => {\n        spyOn(tfOps, 'fill');\n        node.op = 'Fill';\n        node.inputParams['shape'] = createNumericArrayAttrFromIndex(0);\n        node.inputParams['value'] = createNumberAttrFromIndex(1);\n        node.attrParams['dtype'] = createDtypeAttr('int32');\n\n        executeOp(node, {input1, input2}, context);\n\n        expect(tfOps.fill).toHaveBeenCalledWith([1, 2, 3], 1, 'int32');\n      });\n      it('should match json def', () => {\n        node.op = 'Fill';\n        node.inputParams['shape'] = createNumericArrayAttrFromIndex(0);\n        node.inputParams['value'] = createNumberAttrFromIndex(1);\n        node.attrParams['dtype'] = createDtypeAttr('int32');\n\n        expect(validateParam(node, creation.json)).toBeTruthy();\n      });\n    });\n    describe('LinSpace', () => {\n      it('should call tfOps.linspace', () => {\n        spyOn(tfOps, 'linspace');\n        node.op = 'LinSpace';\n        node.inputParams['start'] = createNumberAttrFromIndex(0);\n        node.inputParams['stop'] = createNumberAttrFromIndex(1);\n        node.inputParams['num'] = createNumberAttrFromIndex(2);\n        node.inputNames = ['input', 'input2', 'input3'];\n        const input = [tfOps.scalar(0)];\n        const input3 = [tfOps.scalar(2)];\n        executeOp(node, {input, input2, input3}, context);\n\n        expect(tfOps.linspace).toHaveBeenCalledWith(0, 1, 2);\n      });\n      it('should match json def', () => {\n        node.op = 'LinSpace';\n        node.inputParams['start'] = createNumberAttrFromIndex(0);\n        node.inputParams['stop'] = createNumberAttrFromIndex(1);\n        node.inputParams['num'] = createNumberAttrFromIndex(2);\n\n        expect(validateParam(node, creation.json)).toBeTruthy();\n      });\n    });\n    describe('OneHot', () => {\n      it('should call tfOps.oneHot', () => {\n        spyOn(tfOps, 'oneHot');\n        node.op = 'OneHot';\n        node.inputParams['indices'] = createTensorAttr(0);\n        node.inputParams['depth'] = createNumberAttrFromIndex(1);\n        node.inputParams['onValue'] = createNumberAttrFromIndex(2);\n        node.inputParams['offValue'] = createNumberAttrFromIndex(3);\n        node.inputNames = ['input', 'input2', 'input3', 'input4'];\n        const input = [tfOps.tensor1d([0])];\n        const input3 = [tfOps.scalar(2)];\n        const input4 = [tfOps.scalar(3)];\n        executeOp(node, {input, input2, input3, input4}, context);\n\n        expect(tfOps.oneHot).toHaveBeenCalledWith(input[0], 1, 2, 3);\n      });\n      it('should match json def', () => {\n        node.op = 'OneHot';\n        node.inputParams['indices'] = createTensorAttr(0);\n        node.inputParams['depth'] = createNumberAttrFromIndex(1);\n        node.inputParams['onValue'] = createNumberAttrFromIndex(2);\n        node.inputParams['offValue'] = createNumberAttrFromIndex(3);\n\n        expect(validateParam(node, creation.json)).toBeTruthy();\n      });\n    });\n    describe('Ones', () => {\n      it('should call tfOps.ones', () => {\n        spyOn(tfOps, 'ones');\n        node.op = 'Ones';\n        node.inputParams['shape'] = createNumericArrayAttrFromIndex(0);\n        node.attrParams['dtype'] = createDtypeAttr('float32');\n        executeOp(node, {input1}, context);\n\n        expect(tfOps.ones).toHaveBeenCalledWith([1, 2, 3], 'float32');\n      });\n      it('should match json def', () => {\n        node.op = 'Ones';\n        node.inputParams['shape'] = createNumericArrayAttrFromIndex(0);\n        node.attrParams['dtype'] = createDtypeAttr('float32');\n\n        expect(validateParam(node, creation.json)).toBeTruthy();\n      });\n    });\n    describe('OnesLike', () => {\n      it('should call tfOps.onesLike', () => {\n        spyOn(tfOps, 'onesLike');\n        node.op = 'OnesLike';\n        node.inputParams['x'] = createTensorAttr(0);\n        executeOp(node, {input1}, context);\n\n        expect(tfOps.onesLike).toHaveBeenCalledWith(input1[0]);\n      });\n      it('should match json def', () => {\n        node.op = 'OnesLike';\n        node.inputParams['x'] = createTensorAttr(0);\n\n        expect(validateParam(node, creation.json)).toBeTruthy();\n      });\n    });\n    describe('Range', () => {\n      it('should call tfOps.range', () => {\n        spyOn(tfOps, 'range');\n        node.op = 'Range';\n        node.inputParams['start'] = createNumberAttrFromIndex(0);\n        node.inputParams['stop'] = createNumberAttrFromIndex(1);\n        node.inputParams['step'] = createNumberAttrFromIndex(2);\n        node.attrParams['dtype'] = createDtypeAttr('float32');\n        node.inputNames = ['input', 'input2', 'input3'];\n        const input = [tfOps.scalar(0)];\n        const input3 = [tfOps.scalar(2)];\n        executeOp(node, {input, input2, input3}, context);\n\n        expect(tfOps.range).toHaveBeenCalledWith(0, 1, 2, 'float32');\n      });\n      it('should match json def', () => {\n        node.op = 'Range';\n        node.inputParams['start'] = createNumberAttrFromIndex(0);\n        node.inputParams['stop'] = createNumberAttrFromIndex(1);\n        node.inputParams['step'] = createNumberAttrFromIndex(2);\n        node.attrParams['dtype'] = createDtypeAttr('float32');\n\n        expect(validateParam(node, creation.json)).toBeTruthy();\n      });\n    });\n    describe('RandomUniform', () => {\n      it('should call tfOps.randomUniform', () => {\n        spyOn(tfOps, 'randomUniform');\n        node.op = 'RandomUniform';\n        node.inputParams['shape'] = createNumericArrayAttrFromIndex(0);\n        node.inputNames = ['input1'];\n        node.attrParams['maxval'] = createNumberAttr(1);\n        node.attrParams['minval'] = createNumberAttr(0);\n        node.attrParams['dtype'] = createDtypeAttr('float32');\n        node.attrParams['seed'] = createNumberAttr(0);\n\n        executeOp(node, {input1}, context);\n\n        expect(tfOps.randomUniform)\n            .toHaveBeenCalledWith([1, 2, 3], 0, 1, 'float32');\n      });\n      it('should match json def', () => {\n        node.op = 'RandomUniform';\n        node.inputParams['shape'] = createNumericArrayAttrFromIndex(0);\n        node.inputNames = ['input1'];\n        node.attrParams['maxval'] = createNumberAttr(1);\n        node.attrParams['minval'] = createNumberAttr(0);\n        node.attrParams['dtype'] = createDtypeAttr('float32');\n        node.attrParams['seed'] = createNumberAttr(0);\n\n        expect(validateParam(node, creation.json)).toBeTruthy();\n      });\n    });\n    describe('TruncatedNormal', () => {\n      it('should call tfOps.truncatedNormal', () => {\n        spyOn(tfOps, 'truncatedNormal');\n        node.op = 'TruncatedNormal';\n        node.inputParams['shape'] = createNumericArrayAttrFromIndex(0);\n        node.inputNames = ['input1'];\n        node.attrParams['stdDev'] = createNumberAttr(1);\n        node.attrParams['mean'] = createNumberAttr(0);\n        node.attrParams['dtype'] = createDtypeAttr('float32');\n        node.attrParams['seed'] = createNumberAttr(0);\n\n        executeOp(node, {input1}, context);\n\n        expect(tfOps.truncatedNormal)\n            .toHaveBeenCalledWith([1, 2, 3], 0, 1, 'float32', 0);\n      });\n      it('should match json def', () => {\n        node.op = 'TruncatedNormal';\n        node.inputParams['shape'] = createNumericArrayAttrFromIndex(0);\n        node.inputNames = ['input1'];\n        node.attrParams['stdDev'] = createNumberAttr(1);\n        node.attrParams['mean'] = createNumberAttr(0);\n        node.attrParams['dtype'] = createDtypeAttr('float32');\n        node.attrParams['seed'] = createNumberAttr(0);\n\n        expect(validateParam(node, creation.json)).toBeTruthy();\n      });\n    });\n    describe('Zeros', () => {\n      it('should call tfOps.zeros', () => {\n        spyOn(tfOps, 'zeros');\n        node.op = 'Zeros';\n        node.inputParams['shape'] = createNumericArrayAttrFromIndex(0);\n        node.attrParams['dtype'] = createDtypeAttr('float32');\n        executeOp(node, {input1}, context);\n\n        expect(tfOps.zeros).toHaveBeenCalledWith([1, 2, 3], 'float32');\n      });\n      it('should match json def', () => {\n        node.op = 'Zeros';\n        node.inputParams['shape'] = createNumericArrayAttrFromIndex(0);\n        node.attrParams['dtype'] = createDtypeAttr('float32');\n        expect(validateParam(node, creation.json)).toBeTruthy();\n      });\n    });\n    describe('ZerosLike', () => {\n      it('should call tfOps.zerosLike', () => {\n        spyOn(tfOps, 'zerosLike');\n        node.op = 'ZerosLike';\n        node.inputParams['x'] = createTensorAttr(0);\n        executeOp(node, {input1}, context);\n\n        expect(tfOps.zerosLike).toHaveBeenCalledWith(input1[0]);\n      });\n      it('should match json def', () => {\n        node.op = 'ZerosLike';\n        node.inputParams['x'] = createTensorAttr(0);\n        expect(validateParam(node, creation.json)).toBeTruthy();\n      });\n    });\n    describe('Multinomial', () => {\n      it('should call tfOps.multinomial', () => {\n        spyOn(tfOps, 'multinomial');\n        node.op = 'Multinomial';\n        node.inputParams['logits'] = createTensorAttr(0);\n        node.inputParams['numSamples'] = createNumberAttrFromIndex(1);\n        node.attrParams['seed'] = createNumberAttr(2);\n        executeOp(node, {input1, input2}, context);\n\n        expect(tfOps.multinomial).toHaveBeenCalledWith(input1[0], 1, 2);\n      });\n      it('should match json def', () => {\n        node.op = 'Multinomial';\n        node.inputParams['logits'] = createTensorAttr(0);\n        node.inputParams['numSamples'] = createNumberAttrFromIndex(1);\n        node.attrParams['seed'] = createNumberAttr(2);\n        expect(validateParam(node, creation.json)).toBeTruthy();\n      });\n    });\n  });\n});\n"]}