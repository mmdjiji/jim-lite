{"version":3,"file":"evaluation_executor_test.js","sourceRoot":"","sources":["../../../src/operations/executors/evaluation_executor_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {executeOp} from './evaluation_executor';\nimport {createBoolAttr, createNumberAttrFromIndex, createTensorAttr} from './test_helper';\n\ndescribe('evaluation', () => {\n  let node: Node;\n  const input1 = [tfOps.tensor1d([1])];\n  const input2 = [tfOps.scalar(1)];\n  const context = new ExecutionContext({}, {}, {});\n\n  beforeEach(() => {\n    node = {\n      name: 'input1',\n      op: '',\n      category: 'evaluation',\n      inputNames: ['input1', 'input2'],\n      inputs: [],\n      inputParams: {},\n      attrParams: {},\n      children: []\n    };\n  });\n\n  describe('executeOp', () => {\n    describe('TopKV2', () => {\n      it('should return input', () => {\n        node.op = 'TopKV2';\n        node.inputParams['x'] = createTensorAttr(0);\n        node.inputParams['k'] = createNumberAttrFromIndex(1);\n        node.attrParams['sorted'] = createBoolAttr(true);\n        spyOn(tfOps, 'topk').and.callThrough();\n        executeOp(node, {input1, input2}, context);\n        expect(tfOps.topk).toHaveBeenCalledWith(input1[0], 1, true);\n      });\n    });\n\n    describe('Unique', () => {\n      it('should get called correctly', () => {\n        node.op = 'Unique';\n        node.inputParams['x'] = createTensorAttr(0);\n        spyOn(tfOps, 'unique').and.callThrough();\n        executeOp(node, {input1}, context);\n        expect(tfOps.unique).toHaveBeenCalledWith(input1[0]);\n      });\n    });\n\n    describe('UniqueV2', () => {\n      it('should get called correctly', () => {\n        node.op = 'UniqueV2';\n        node.inputParams['x'] = createTensorAttr(0);\n        node.inputParams['axis'] = createNumberAttrFromIndex(1);\n        spyOn(tfOps, 'unique').and.callThrough();\n        const xInput = [tfOps.tensor2d([[1], [2]])];\n        const axisInput = [tfOps.scalar(1)];\n        executeOp(node, {'input1': xInput, 'input2': axisInput}, context);\n        expect(tfOps.unique).toHaveBeenCalledWith(xInput[0], 1);\n      });\n    });\n  });\n});\n"]}