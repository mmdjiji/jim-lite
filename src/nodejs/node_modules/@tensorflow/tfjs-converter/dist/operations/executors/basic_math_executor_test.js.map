{"version":3,"file":"basic_math_executor_test.js","sourceRoot":"","sources":["../../../src/operations/executors/basic_math_executor_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {scalar} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {ExecutionContext} from '../../executor/execution_context';\nimport * as basic_math from '../op_list/basic_math';\nimport {Node} from '../types';\n\nimport {executeOp} from './basic_math_executor';\nimport {createNumberAttr, createNumberAttrFromIndex, createNumericArrayAttrFromIndex, createTensorAttr, validateParam} from './test_helper';\n\ndescribe('basic math', () => {\n  let node: Node;\n  const input1 = [scalar(1)];\n  const context = new ExecutionContext({}, {}, {});\n\n  beforeEach(() => {\n    node = {\n      name: 'test',\n      op: '',\n      category: 'basic_math',\n      inputNames: ['input1'],\n      inputs: [],\n      inputParams: {x: createTensorAttr(0)},\n      attrParams: {},\n      children: []\n    };\n  });\n\n  describe('executeOp', () => {\n    ['Abs', 'Acos', 'Asin', 'Atan', 'Ceil', 'Cos', 'Cosh', 'Elu', 'Exp',\n     'Floor', 'Log', 'Imag', 'Neg', 'Real', 'Relu', 'Selu', 'Sigmoid', 'Sin',\n     'Sinh', 'Sqrt', 'Square', 'Tanh', 'Tan', 'Sign', 'Round', 'Expm1', 'Log1p',\n     'Reciprocal', 'Softplus', 'Asinh', 'Acosh', 'Atanh', 'Erf']\n        .forEach(op => {\n          it('should call tfOps.' + op, () => {\n            const spy =\n                spyOn(tfOps, op.charAt(0).toLowerCase() + op.slice(1) as 'abs');\n            node.op = op;\n            executeOp(node, {input1}, context);\n\n            expect(spy).toHaveBeenCalledWith(input1[0]);\n          });\n          it('should match op def', () => {\n            node.op = op;\n\n            expect(validateParam(node, basic_math.json)).toBeTruthy();\n          });\n        });\n    describe('Relu6', () => {\n      it('should call tfOps.relu6', () => {\n        spyOn(tfOps, 'relu6');\n        node.op = 'Relu6';\n\n        executeOp(node, {input1}, context);\n\n        expect(tfOps.relu6).toHaveBeenCalledWith(input1[0]);\n      });\n      it('should match op def', () => {\n        node.op = 'Relu6';\n\n        expect(validateParam(node, basic_math.json)).toBeTruthy();\n      });\n    });\n    describe('ClipByValue', () => {\n      it('should call tfOps.clipByValue', () => {\n        spyOn(tfOps, 'clipByValue');\n        node.op = 'ClipByValue';\n        node.inputNames = ['input1', 'input2', 'input3'];\n        node.inputParams['clipValueMin'] = createNumberAttrFromIndex(1);\n        node.inputParams['clipValueMax'] = createNumberAttrFromIndex(2);\n        const input2 = [tfOps.scalar(2)];\n        const input3 = [tfOps.scalar(3)];\n        executeOp(node, {input1, input2, input3}, context);\n\n        expect(tfOps.clipByValue).toHaveBeenCalledWith(input1[0], 2, 3);\n      });\n      it('should match op def', () => {\n        node.op = 'ClipByValue';\n        node.inputParams['clipValueMin'] = createNumberAttrFromIndex(1);\n        node.inputParams['clipValueMax'] = createNumberAttrFromIndex(2);\n\n        expect(validateParam(node, basic_math.json)).toBeTruthy();\n      });\n    });\n    describe('Prod', () => {\n      it('should call tfOps.prod', () => {\n        spyOn(tfOps, 'prod');\n        node.op = 'Prod';\n        node.inputParams['axes'] = createNumericArrayAttrFromIndex(1);\n        node.inputNames = ['input1', 'input2'];\n        const input2 = [tfOps.tensor1d([2])];\n        executeOp(node, {input1, input2}, context);\n\n        expect(tfOps.prod).toHaveBeenCalledWith(input1[0], [2]);\n      });\n      it('should match op def', () => {\n        node.op = 'Prod';\n        node.inputParams['axes'] = createNumericArrayAttrFromIndex(1);\n\n        expect(validateParam(node, basic_math.json)).toBeTruthy();\n      });\n    });\n    describe('Rsqrt', () => {\n      it('should call tfOps.rsqrt', () => {\n        const input1 = [tfOps.scalar(1)];\n        node.op = 'Rsqrt';\n        spyOn(tfOps, 'rsqrt').and.returnValue(input1);\n        executeOp(node, {input1}, context);\n\n        expect(tfOps.rsqrt).toHaveBeenCalledWith(input1[0]);\n      });\n      it('should match op def', () => {\n        node.op = 'Rsqrt';\n\n        expect(validateParam(node, basic_math.json)).toBeTruthy();\n      });\n    });\n    describe('LeakyRelu', () => {\n      it('should call tfOps.leakyRelu', () => {\n        spyOn(tfOps, 'leakyRelu');\n        node.op = 'LeakyRelu';\n        node.attrParams['alpha'] = createNumberAttr(1);\n        node.inputNames = ['input1'];\n        executeOp(node, {input1}, context);\n\n        expect(tfOps.leakyRelu).toHaveBeenCalledWith(input1[0], 1);\n      });\n      it('should match op def', () => {\n        node.op = 'LeakyRelu';\n        node.attrParams['alpha'] = createNumberAttr(1);\n        expect(validateParam(node, basic_math.json)).toBeTruthy();\n      });\n    });\n    describe('Prelu', () => {\n      it('should call tfOps.Prelu', () => {\n        spyOn(tfOps, 'prelu');\n        node.op = 'Prelu';\n        node.inputParams['x'] = createTensorAttr(0);\n        node.inputParams['alpha'] = createTensorAttr(1);\n        node.inputNames = ['input1', 'input2'];\n        const input2 = [tfOps.scalar(1)];\n        executeOp(node, {input1, input2}, context);\n\n        expect(tfOps.prelu).toHaveBeenCalledWith(input1[0], input2[0]);\n      });\n      it('should match op def', () => {\n        node.op = 'Prelu';\n        node.inputParams['x'] = createTensorAttr(0);\n        node.inputParams['alpha'] = createTensorAttr(1);\n        expect(validateParam(node, basic_math.json)).toBeTruthy();\n      });\n    });\n    describe('Atan2', () => {\n      it('should call tfOps.atan2', () => {\n        spyOn(tfOps, 'atan2');\n        node.op = 'Atan2';\n        node.inputParams['y'] = createTensorAttr(1);\n        node.inputNames = ['input1', 'input2'];\n        const input2 = [tfOps.scalar(2)];\n        executeOp(node, {input1, input2}, context);\n\n        expect(tfOps.atan2).toHaveBeenCalledWith(input1[0], input2[0]);\n      });\n      it('should match op def', () => {\n        node.op = 'Atan2';\n        node.inputParams['y'] = createTensorAttr(1);\n\n        expect(validateParam(node, basic_math.json)).toBeTruthy();\n      });\n    });\n    describe('ComplexAbs', () => {\n      it('should call tfOps.abs', () => {\n        spyOn(tfOps, 'abs');\n        node.op = 'ComplexAbs';\n        node.inputNames = ['input1'];\n        executeOp(node, {input1}, context);\n\n        expect(tfOps.abs).toHaveBeenCalledWith(input1[0]);\n      });\n      it('should match op def', () => {\n        node.op = 'ComplexAbs';\n\n        expect(validateParam(node, basic_math.json)).toBeTruthy();\n      });\n    });\n    describe('Complex', () => {\n      it('should call tfOps.complex', () => {\n        spyOn(tfOps, 'complex');\n        node.op = 'Complex';\n        node.inputParams = {\n          real: createTensorAttr(0),\n          imag: createTensorAttr(1)\n        };\n        const input2 = [tfOps.scalar(2)];\n        node.inputNames = ['input1', 'input2'];\n        executeOp(node, {input1, input2}, context);\n\n        expect(tfOps.complex).toHaveBeenCalledWith(input1[0], input2[0]);\n      });\n      it('should match op def', () => {\n        node.op = 'Complex';\n        node.inputParams = {\n          real: createTensorAttr(0),\n          imag: createTensorAttr(1)\n        };\n\n        expect(validateParam(node, basic_math.json)).toBeTruthy();\n      });\n    });\n    describe('IsNan', () => {\n      it('should call tfOps.isNaN', () => {\n        spyOn(tfOps, 'isNaN');\n        node.op = 'IsNan';\n\n        executeOp(node, {input1}, context);\n\n        expect(tfOps.isNaN).toHaveBeenCalledWith(input1[0]);\n      });\n      it('should match op def', () => {\n        node.op = 'IsNan';\n\n        expect(validateParam(node, basic_math.json)).toBeTruthy();\n      });\n    });\n  });\n});\n"]}