{"version":3,"file":"convolution_executor_test.js","sourceRoot":"","sources":["../../../src/operations/executors/convolution_executor_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {executeOp} from './convolution_executor';\nimport {createNumberAttr, createNumericArrayAttr, createStrArrayAttr, createStrAttr, createTensorAttr, createTensorsAttr} from './test_helper';\nimport {createBoolAttr} from './test_helper';\n\ndescribe('convolution', () => {\n  let node: Node;\n  const input = [tfOps.scalar(1)];\n  const context = new ExecutionContext({}, {}, {});\n\n  beforeEach(() => {\n    node = {\n      name: 'test',\n      op: '',\n      category: 'convolution',\n      inputNames: ['input'],\n      inputs: [],\n      inputParams: {x: createTensorAttr(0)},\n      attrParams: {},\n      children: []\n    };\n  });\n\n  describe('executeOp', () => {\n    describe('AvgPool', () => {\n      it('should call tfOps.avgPool', () => {\n        spyOn(tfOps, 'avgPool');\n        node.op = 'AvgPool';\n        node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['pad'] = createStrAttr('same');\n        node.attrParams['kernelSize'] = createNumericArrayAttr([1, 2, 2, 1]);\n\n        executeOp(node, {input}, context);\n\n        expect(tfOps.avgPool)\n            .toHaveBeenCalledWith(input[0], [2, 2], [2, 2], 'same');\n      });\n    });\n\n    describe('maxPool', () => {\n      it('should call tfOps.maxPool', () => {\n        spyOn(tfOps, 'maxPool');\n        node.op = 'MaxPool';\n        node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['pad'] = createStrAttr('same');\n        node.attrParams['kernelSize'] = createNumericArrayAttr([1, 2, 2, 1]);\n\n        executeOp(node, {input}, context);\n\n        expect(tfOps.maxPool)\n            .toHaveBeenCalledWith(input[0], [2, 2], [2, 2], 'same');\n      });\n    });\n    describe('Conv2d', () => {\n      it('should call tfOps.conv2d', () => {\n        spyOn(tfOps, 'conv2d');\n        node.op = 'Conv2D';\n        node.inputParams['filter'] = createTensorAttr(1);\n        node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['pad'] = createStrAttr('same');\n        node.attrParams['dataFormat'] = createStrAttr('NHWC');\n        node.attrParams['dilations'] = createNumericArrayAttr([1, 2, 2, 1]);\n\n        const input1 = [tfOps.scalar(1.0)];\n        const input2 = [tfOps.scalar(1.0)];\n        node.inputNames = ['input1', 'input2'];\n\n        executeOp(node, {input1, input2}, context);\n\n        expect(tfOps.conv2d)\n            .toHaveBeenCalledWith(\n                input1[0], input2[0], [2, 2], 'same', 'NHWC', [2, 2]);\n      });\n      it('should support explicit padding', () => {\n        spyOn(tfOps, 'conv2d');\n        node.op = 'Conv2D';\n        node.inputParams['filter'] = createTensorAttr(1);\n        node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['pad'] = createStrAttr('explicit');\n        node.attrParams['explicitPaddings'] =\n            createNumericArrayAttr([0, 0, 1, 1, 2, 2, 0, 0]);\n        node.attrParams['dataFormat'] = createStrAttr('NHWC');\n        node.attrParams['dilations'] = createNumericArrayAttr([1, 2, 2, 1]);\n\n        const input1 = [tfOps.scalar(1.0)];\n        const input2 = [tfOps.scalar(1.0)];\n        node.inputNames = ['input1', 'input2'];\n\n        executeOp(node, {input1, input2}, context);\n\n        expect(tfOps.conv2d)\n            .toHaveBeenCalledWith(\n                input1[0], input2[0], [2, 2], [[0, 0], [1, 1], [2, 2], [0, 0]],\n                'NHWC', [2, 2]);\n      });\n    });\n    describe('Conv2DBackpropInput', () => {\n      it('should call tfOps.conv2dTranspose', () => {\n        spyOn(tfOps, 'conv2dTranspose');\n        node.op = 'Conv2DBackpropInput';\n        node.attrParams['outputShape'] = createNumericArrayAttr([1, 2, 2, 2]);\n        node.inputParams['filter'] = createTensorAttr(1);\n        node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['pad'] = createStrAttr('same');\n\n        const input1 = [tfOps.scalar(1.0)];\n        const input2 = [tfOps.scalar(1.0)];\n        node.inputNames = ['input1', 'input2'];\n\n        executeOp(node, {input1, input2}, context);\n\n        expect(tfOps.conv2dTranspose)\n            .toHaveBeenCalledWith(\n                input1[0], input2[0], [1, 2, 2, 2], [2, 2], 'same');\n      });\n      it('should support explicit padding', () => {\n        spyOn(tfOps, 'conv2dTranspose');\n        node.op = 'Conv2DBackpropInput';\n        node.attrParams['outputShape'] = createNumericArrayAttr([1, 2, 2, 2]);\n        node.inputParams['filter'] = createTensorAttr(1);\n        node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['pad'] = createStrAttr('explicit');\n        node.attrParams['explicitPaddings'] =\n            createNumericArrayAttr([0, 0, 1, 1, 2, 2, 0, 0]);\n\n        const input1 = [tfOps.scalar(1.0)];\n        const input2 = [tfOps.scalar(1.0)];\n        node.inputNames = ['input1', 'input2'];\n\n        executeOp(node, {input1, input2}, context);\n\n        expect(tfOps.conv2dTranspose)\n            .toHaveBeenCalledWith(\n                input1[0],\n                input2[0],\n                [1, 2, 2, 2],\n                [2, 2],\n                [[0, 0], [1, 1], [2, 2], [0, 0]],\n            );\n      });\n    });\n    describe('Conv1D', () => {\n      it('should call tfOps.conv1d', () => {\n        spyOn(tfOps, 'conv1d');\n        node.op = 'Conv1D';\n        node.category = 'convolution';\n        node.inputParams['filter'] = createTensorAttr(1);\n        node.attrParams['stride'] = createNumberAttr(1);\n        node.attrParams['pad'] = createStrAttr('same');\n        node.attrParams['dataFormat'] = createStrAttr('NWC');\n        node.attrParams['dilation'] = createNumberAttr(1);\n\n        const input1 = [tfOps.scalar(1.0)];\n        const input2 = [tfOps.scalar(1.0)];\n        node.inputNames = ['input1', 'input2'];\n\n        executeOp(node, {input1, input2}, context);\n\n        expect(tfOps.conv1d)\n            .toHaveBeenCalledWith(input1[0], input2[0], 1, 'same', 'NWC', 1);\n      });\n    });\n\n    describe('DepthwiseConv2d', () => {\n      it('should call tfOps.depthwiseConv2d', () => {\n        spyOn(tfOps, 'depthwiseConv2d');\n        node.op = 'DepthwiseConv2d';\n        node.category = 'convolution';\n        node.inputParams['input'] = createTensorAttr(0);\n        node.inputParams['filter'] = createTensorAttr(1);\n        node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['pad'] = createStrAttr('same');\n        node.attrParams['dataFormat'] = createStrAttr('NHWC');\n        node.attrParams['dilations'] = createNumericArrayAttr([1, 2, 2, 1]);\n        const input1 = [tfOps.scalar(1.0)];\n        const input2 = [tfOps.scalar(1.0)];\n        node.inputNames = ['input1', 'input2'];\n\n        executeOp(node, {input1, input2}, context);\n\n        expect(tfOps.depthwiseConv2d)\n            .toHaveBeenCalledWith(\n                input1[0], input2[0], [2, 2], 'same', 'NHWC', [2, 2]);\n      });\n      it('support explicit padding', () => {\n        spyOn(tfOps, 'depthwiseConv2d');\n        node.op = 'DepthwiseConv2d';\n        node.category = 'convolution';\n        node.inputParams['input'] = createTensorAttr(0);\n        node.inputParams['filter'] = createTensorAttr(1);\n        node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['pad'] = createStrAttr('explicit');\n        node.attrParams['explicitPaddings'] =\n            createNumericArrayAttr([0, 0, 1, 1, 2, 2, 0, 0]);\n        node.attrParams['dataFormat'] = createStrAttr('NHWC');\n        node.attrParams['dilations'] = createNumericArrayAttr([1, 2, 2, 1]);\n        const input1 = [tfOps.scalar(1.0)];\n        const input2 = [tfOps.scalar(1.0)];\n        node.inputNames = ['input1', 'input2'];\n\n        executeOp(node, {input1, input2}, context);\n\n        expect(tfOps.depthwiseConv2d)\n            .toHaveBeenCalledWith(\n                input1[0], input2[0], [2, 2], [[0, 0], [1, 1], [2, 2], [0, 0]],\n                'NHWC', [2, 2]);\n      });\n    });\n\n    describe('Conv3d', () => {\n      it('should call tfOps.conv3d', () => {\n        spyOn(tfOps, 'conv3d');\n        node.op = 'Conv3D';\n        node.category = 'convolution';\n        node.inputParams['filter'] = createTensorAttr(1);\n        node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 2, 1]);\n        node.attrParams['pad'] = createStrAttr('same');\n        node.attrParams['dataFormat'] = createStrAttr('NHWC');\n        node.attrParams['dilations'] = createNumericArrayAttr([1, 2, 2, 2, 1]);\n\n        const input1 = [tfOps.scalar(1.0)];\n        const input2 = [tfOps.scalar(1.0)];\n        node.inputNames = ['input1', 'input2'];\n\n        executeOp(node, {input1, input2}, context);\n\n        expect(tfOps.conv3d)\n            .toHaveBeenCalledWith(\n                input1[0], input2[0], [2, 2, 2], 'same', 'NHWC', [2, 2, 2]);\n      });\n    });\n\n    describe('AvgPool3D', () => {\n      it('should call tfOps.avgPool3d', () => {\n        spyOn(tfOps, 'avgPool3d');\n        node.op = 'AvgPool3D';\n        node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 2, 1]);\n        node.attrParams['pad'] = createStrAttr('same');\n        node.attrParams['kernelSize'] = createNumericArrayAttr([1, 2, 2, 2, 1]);\n\n        executeOp(node, {input}, context);\n\n        expect(tfOps.avgPool3d)\n            .toHaveBeenCalledWith(input[0], [2, 2, 2], [2, 2, 2], 'same');\n      });\n    });\n\n    describe('MaxPool3D', () => {\n      it('should call tfOps.maxPool3d', () => {\n        spyOn(tfOps, 'maxPool3d');\n        node.op = 'MaxPool3D';\n        node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 2, 1]);\n        node.attrParams['pad'] = createStrAttr('same');\n        node.attrParams['kernelSize'] = createNumericArrayAttr([1, 2, 2, 2, 1]);\n\n        executeOp(node, {input}, context);\n\n        expect(tfOps.maxPool3d)\n            .toHaveBeenCalledWith(input[0], [2, 2, 2], [2, 2, 2], 'same');\n      });\n    });\n\n    describe('MaxPoolWithArgmax', () => {\n      it('should call tfOps.maxPoolWithArgmax', () => {\n        spyOn(tfOps, 'maxPoolWithArgmax').and.returnValue({});\n        node.op = 'MaxPoolWithArgmax';\n        node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['pad'] = createStrAttr('same');\n        node.attrParams['kernelSize'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['dataFormat'] = createStrAttr('NDHWC');\n        node.attrParams['includeBatchInIndex'] = createBoolAttr(true);\n        executeOp(node, {input}, context);\n\n        expect(tfOps.maxPoolWithArgmax)\n            .toHaveBeenCalledWith(input[0], [2, 2], [2, 2], 'same', true);\n      });\n    });\n\n    describe('_FusedConv2d', () => {\n      it('with bias and activation func', () => {\n        spyOn(tfOps.fused, 'conv2d');\n        node.op = '_FusedConv2D';\n        node.inputParams['filter'] = createTensorAttr(1);\n        node.inputParams['args'] = createTensorsAttr(2, 0);\n        node.attrParams['fusedOps'] = createStrArrayAttr(['biasadd', 'relu']);\n        node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['pad'] = createStrAttr('same');\n        node.attrParams['dataFormat'] = createStrAttr('NHWC');\n        node.attrParams['dilations'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['numArgs'] = createNumberAttr(1);\n        const input1 = [tfOps.scalar(1.0)];\n        const input2 = [tfOps.scalar(2.0)];\n        const input3 = [tfOps.scalar(3.0)];\n\n        node.inputNames = ['input1', 'input2', 'input3'];\n        executeOp(node, {input1, input2, input3}, context);\n\n        expect(tfOps.fused.conv2d).toHaveBeenCalledWith({\n          x: input1[0],\n          filter: input2[0],\n          strides: [2, 2],\n          pad: 'same',\n          dataFormat: 'NHWC',\n          dilations: [2, 2],\n          bias: input3[0],\n          activation: 'relu',\n          preluActivationWeights: undefined,\n          leakyreluAlpha: undefined\n        });\n      });\n      it('should support explicit padding', () => {\n        spyOn(tfOps.fused, 'conv2d');\n        node.op = '_FusedConv2D';\n        node.inputParams['filter'] = createTensorAttr(1);\n        node.inputParams['args'] = createTensorsAttr(2, 0);\n        node.attrParams['fusedOps'] = createStrArrayAttr(['biasadd', 'relu']);\n        node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['pad'] = createStrAttr('explicit');\n        node.attrParams['explicitPaddings'] =\n            createNumericArrayAttr([0, 0, 1, 1, 2, 2, 0, 0]);\n        node.attrParams['dataFormat'] = createStrAttr('NHWC');\n        node.attrParams['dilations'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['numArgs'] = createNumberAttr(1);\n        const input1 = [tfOps.scalar(1.0)];\n        const input2 = [tfOps.scalar(2.0)];\n        const input3 = [tfOps.scalar(3.0)];\n\n        node.inputNames = ['input1', 'input2', 'input3'];\n        executeOp(node, {input1, input2, input3}, context);\n\n        expect(tfOps.fused.conv2d).toHaveBeenCalledWith({\n          x: input1[0],\n          filter: input2[0],\n          strides: [2, 2],\n          pad: [[0, 0], [1, 1], [2, 2], [0, 0]],\n          dataFormat: 'NHWC',\n          dilations: [2, 2],\n          bias: input3[0],\n          activation: 'relu',\n          preluActivationWeights: undefined,\n          leakyreluAlpha: undefined\n        });\n      });\n      it('with bias and prelu activation func', () => {\n        spyOn(tfOps.fused, 'conv2d');\n        node.op = '_FusedConv2D';\n        node.inputParams['filter'] = createTensorAttr(1);\n        node.inputParams['args'] = createTensorsAttr(2, 0);\n        node.attrParams['fusedOps'] = createStrArrayAttr(['biasadd', 'prelu']);\n        node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['pad'] = createStrAttr('same');\n        node.attrParams['dataFormat'] = createStrAttr('NHWC');\n        node.attrParams['dilations'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['numArgs'] = createNumberAttr(2);\n        const input1 = [tfOps.scalar(1.0)];\n        const input2 = [tfOps.scalar(2.0)];\n        const input3 = [tfOps.scalar(3.0)];\n        const input4 = [tfOps.scalar(4.0)];\n        node.inputNames = ['input1', 'input2', 'input3', 'input4'];\n        executeOp(node, {input1, input2, input3, input4}, context);\n\n        expect(tfOps.fused.conv2d).toHaveBeenCalledWith({\n          x: input1[0],\n          filter: input2[0],\n          strides: [2, 2],\n          pad: 'same',\n          dataFormat: 'NHWC',\n          dilations: [2, 2],\n          bias: input3[0],\n          activation: 'prelu',\n          preluActivationWeights: input4[0],\n          leakyreluAlpha: undefined\n        });\n      });\n      it('with bias and leakyrelu activation func', () => {\n        spyOn(tfOps.fused, 'conv2d');\n        node.op = '_FusedConv2D';\n        node.inputParams['filter'] = createTensorAttr(1);\n        node.inputParams['args'] = createTensorsAttr(2, 0);\n        node.attrParams['fusedOps'] =\n            createStrArrayAttr(['biasadd', 'leakyrelu']);\n        node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['pad'] = createStrAttr('same');\n        node.attrParams['dataFormat'] = createStrAttr('NHWC');\n        node.attrParams['dilations'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['numArgs'] = createNumberAttr(1);\n        node.attrParams['leakyreluAlpha'] = createNumberAttr(0.3);\n        const input1 = [tfOps.scalar(1.0)];\n        const input2 = [tfOps.scalar(2.0)];\n        const input3 = [tfOps.scalar(3.0)];\n        node.inputNames = ['input1', 'input2', 'input3'];\n        executeOp(node, {input1, input2, input3}, context);\n\n        expect(tfOps.fused.conv2d).toHaveBeenCalledWith({\n          x: input1[0],\n          filter: input2[0],\n          strides: [2, 2],\n          pad: 'same',\n          dataFormat: 'NHWC',\n          dilations: [2, 2],\n          bias: input3[0],\n          activation: 'leakyrelu',\n          preluActivationWeights: undefined,\n          leakyreluAlpha: 0.3\n        });\n      });\n\n      it('bias add', () => {\n        spyOn(tfOps.fused, 'conv2d');\n        node.op = '_FusedConv2D';\n        node.inputParams['filter'] = createTensorAttr(1);\n        node.inputParams['args'] = createTensorsAttr(2, 0);\n        node.attrParams['fusedOps'] = createStrArrayAttr(['biasadd']);\n        node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['pad'] = createStrAttr('same');\n        node.attrParams['dataFormat'] = createStrAttr('NHWC');\n        node.attrParams['dilations'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['numArgs'] = createNumberAttr(1);\n        const input1 = [tfOps.scalar(1.0)];\n        const input2 = [tfOps.scalar(2.0)];\n        const input3 = [tfOps.scalar(3.0)];\n\n        node.inputNames = ['input1', 'input2', 'input3'];\n        executeOp(node, {input1, input2, input3}, context);\n\n        expect(tfOps.fused.conv2d).toHaveBeenCalledWith({\n          x: input1[0],\n          filter: input2[0],\n          strides: [2, 2],\n          pad: 'same',\n          dataFormat: 'NHWC',\n          dilations: [2, 2],\n          bias: input3[0],\n          activation: undefined,\n          preluActivationWeights: undefined,\n          leakyreluAlpha: undefined\n        });\n      });\n      it('fail with batchnorm', () => {\n        spyOn(tfOps.fused, 'conv2d');\n        node.op = '_FusedConv2D';\n        node.inputParams['filter'] = createTensorAttr(1);\n        node.inputParams['args'] = createTensorsAttr(2, 0);\n        node.attrParams['fusedOps'] = createStrArrayAttr(['fusedbatchnorm']);\n        node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['pad'] = createStrAttr('same');\n        node.attrParams['dataFormat'] = createStrAttr('NHWC');\n        node.attrParams['dilations'] = createNumericArrayAttr([1, 2, 2, 1]);\n        node.attrParams['numArgs'] = createNumberAttr(1);\n        const input1 = [tfOps.scalar(1.0)];\n        const input2 = [tfOps.scalar(2.0)];\n        const input3 = [tfOps.scalar(3.0)];\n\n        node.inputNames = ['input1', 'input2', 'input3'];\n        expect(() => executeOp(node, {input1, input2, input3}, context))\n            .toThrow();\n      });\n    });\n  });\n  describe('FusedDepthwiseConv2d', () => {\n    it('support explicit padding', () => {\n      spyOn(tfOps.fused, 'depthwiseConv2d');\n      node.op = 'FusedDepthwiseConv2dNative';\n      node.inputParams['filter'] = createTensorAttr(1);\n      node.inputParams['args'] = createTensorsAttr(2, 0);\n      node.attrParams['fusedOps'] = createStrArrayAttr(['biasadd', 'relu']);\n      node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n      node.attrParams['pad'] = createStrAttr('explicit');\n      node.attrParams['explicitPaddings'] =\n          createNumericArrayAttr([0, 0, 1, 1, 2, 2, 0, 0]);\n      node.attrParams['dataFormat'] = createStrAttr('NHWC');\n      node.attrParams['dilations'] = createNumericArrayAttr([1, 2, 2, 1]);\n      node.attrParams['numArgs'] = createNumberAttr(1);\n      const input1 = [tfOps.scalar(1.0)];\n      const input2 = [tfOps.scalar(2.0)];\n      const input3 = [tfOps.scalar(3.0)];\n\n      node.inputNames = ['input1', 'input2', 'input3'];\n      executeOp(node, {input1, input2, input3}, context);\n\n      expect(tfOps.fused.depthwiseConv2d).toHaveBeenCalledWith({\n        x: input1[0],\n        filter: input2[0],\n        strides: [2, 2],\n        pad: [[0, 0], [1, 1], [2, 2], [0, 0]],\n        dataFormat: 'NHWC',\n        dilations: [2, 2],\n        bias: input3[0],\n        activation: 'relu',\n        preluActivationWeights: undefined,\n        leakyreluAlpha: undefined\n      });\n    });\n    it('with only activation func', () => {\n      spyOn(tfOps.fused, 'depthwiseConv2d');\n      node.op = 'FusedDepthwiseConv2dNative';\n      node.inputParams['filter'] = createTensorAttr(1);\n      node.inputParams['args'] = createTensorsAttr(2, 0);\n      node.attrParams['fusedOps'] = createStrArrayAttr(['noop', 'prelu']);\n      node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n      node.attrParams['pad'] = createStrAttr('same');\n      node.attrParams['dataFormat'] = createStrAttr('NHWC');\n      node.attrParams['dilations'] = createNumericArrayAttr([1, 2, 2, 1]);\n      node.attrParams['numArgs'] = createNumberAttr(1);\n      const input1 = [tfOps.scalar(1.0)];\n      const input2 = [tfOps.scalar(2.0)];\n      const input3 = [tfOps.scalar(3.0)];\n      node.inputNames = ['input1', 'input2', 'input3'];\n      executeOp(node, {input1, input2, input3}, context);\n\n      expect(tfOps.fused.depthwiseConv2d).toHaveBeenCalledWith({\n        x: input1[0],\n        filter: input2[0],\n        strides: [2, 2],\n        pad: 'same',\n        dataFormat: 'NHWC',\n        dilations: [2, 2],\n        bias: undefined,\n        activation: 'prelu',\n        preluActivationWeights: input3[0],\n        leakyreluAlpha: undefined\n      });\n    });\n    it('with bias and activation func', () => {\n      spyOn(tfOps.fused, 'depthwiseConv2d');\n      node.op = 'FusedDepthwiseConv2dNative';\n      node.inputParams['filter'] = createTensorAttr(1);\n      node.inputParams['args'] = createTensorsAttr(2, 0);\n      node.attrParams['fusedOps'] = createStrArrayAttr(['biasadd', 'relu']);\n      node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n      node.attrParams['pad'] = createStrAttr('same');\n      node.attrParams['dataFormat'] = createStrAttr('NHWC');\n      node.attrParams['dilations'] = createNumericArrayAttr([1, 2, 2, 1]);\n      node.attrParams['numArgs'] = createNumberAttr(1);\n      const input1 = [tfOps.scalar(1.0)];\n      const input2 = [tfOps.scalar(2.0)];\n      const input3 = [tfOps.scalar(3.0)];\n\n      node.inputNames = ['input1', 'input2', 'input3'];\n      executeOp(node, {input1, input2, input3}, context);\n\n      expect(tfOps.fused.depthwiseConv2d).toHaveBeenCalledWith({\n        x: input1[0],\n        filter: input2[0],\n        strides: [2, 2],\n        pad: 'same',\n        dataFormat: 'NHWC',\n        dilations: [2, 2],\n        bias: input3[0],\n        activation: 'relu',\n        preluActivationWeights: undefined,\n        leakyreluAlpha: undefined\n      });\n    });\n    it('with bias and prelu activation func', () => {\n      spyOn(tfOps.fused, 'depthwiseConv2d');\n      node.op = 'FusedDepthwiseConv2dNative';\n      node.inputParams['filter'] = createTensorAttr(1);\n      node.inputParams['args'] = createTensorsAttr(2, 0);\n      node.attrParams['fusedOps'] = createStrArrayAttr(['biasadd', 'prelu']);\n      node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n      node.attrParams['pad'] = createStrAttr('same');\n      node.attrParams['dataFormat'] = createStrAttr('NHWC');\n      node.attrParams['dilations'] = createNumericArrayAttr([1, 2, 2, 1]);\n      node.attrParams['numArgs'] = createNumberAttr(2);\n      const input1 = [tfOps.scalar(1.0)];\n      const input2 = [tfOps.scalar(2.0)];\n      const input3 = [tfOps.scalar(3.0)];\n      const input4 = [tfOps.scalar(4.0)];\n      node.inputNames = ['input1', 'input2', 'input3', 'input4'];\n      executeOp(node, {input1, input2, input3, input4}, context);\n\n      expect(tfOps.fused.depthwiseConv2d).toHaveBeenCalledWith({\n        x: input1[0],\n        filter: input2[0],\n        strides: [2, 2],\n        pad: 'same',\n        dataFormat: 'NHWC',\n        dilations: [2, 2],\n        bias: input3[0],\n        activation: 'prelu',\n        preluActivationWeights: input4[0],\n        leakyreluAlpha: undefined\n      });\n    });\n    it('with bias and leakyrelu activation func', () => {\n      spyOn(tfOps.fused, 'depthwiseConv2d');\n      node.op = 'FusedDepthwiseConv2dNative';\n      node.inputParams['filter'] = createTensorAttr(1);\n      node.inputParams['args'] = createTensorsAttr(2, 0);\n      node.attrParams['fusedOps'] =\n          createStrArrayAttr(['biasadd', 'leakyrelu']);\n      node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n      node.attrParams['pad'] = createStrAttr('same');\n      node.attrParams['dataFormat'] = createStrAttr('NHWC');\n      node.attrParams['dilations'] = createNumericArrayAttr([1, 2, 2, 1]);\n      node.attrParams['numArgs'] = createNumberAttr(1);\n      node.attrParams['leakyreluAlpha'] = createNumberAttr(0.3);\n      const input1 = [tfOps.scalar(1.0)];\n      const input2 = [tfOps.scalar(2.0)];\n      const input3 = [tfOps.scalar(3.0)];\n      node.inputNames = ['input1', 'input2', 'input3'];\n      executeOp(node, {input1, input2, input3}, context);\n\n      expect(tfOps.fused.depthwiseConv2d).toHaveBeenCalledWith({\n        x: input1[0],\n        filter: input2[0],\n        strides: [2, 2],\n        pad: 'same',\n        dataFormat: 'NHWC',\n        dilations: [2, 2],\n        bias: input3[0],\n        activation: 'leakyrelu',\n        preluActivationWeights: undefined,\n        leakyreluAlpha: 0.3\n      });\n    });\n\n    it('bias add', () => {\n      spyOn(tfOps.fused, 'depthwiseConv2d');\n      node.op = 'FusedDepthwiseConv2dNative';\n      node.inputParams['filter'] = createTensorAttr(1);\n      node.inputParams['args'] = createTensorsAttr(2, 0);\n      node.attrParams['fusedOps'] = createStrArrayAttr(['biasadd']);\n      node.attrParams['strides'] = createNumericArrayAttr([1, 2, 2, 1]);\n      node.attrParams['pad'] = createStrAttr('same');\n      node.attrParams['dataFormat'] = createStrAttr('NHWC');\n      node.attrParams['dilations'] = createNumericArrayAttr([1, 2, 2, 1]);\n      node.attrParams['numArgs'] = createNumberAttr(1);\n      const input1 = [tfOps.scalar(1.0)];\n      const input2 = [tfOps.scalar(2.0)];\n      const input3 = [tfOps.scalar(3.0)];\n\n      node.inputNames = ['input1', 'input2', 'input3'];\n      executeOp(node, {input1, input2, input3}, context);\n\n      expect(tfOps.fused.depthwiseConv2d).toHaveBeenCalledWith({\n        x: input1[0],\n        filter: input2[0],\n        strides: [2, 2],\n        pad: 'same',\n        dataFormat: 'NHWC',\n        dilations: [2, 2],\n        bias: input3[0],\n        activation: undefined,\n        preluActivationWeights: undefined,\n        leakyreluAlpha: undefined\n      });\n    });\n  });\n\n  describe('dilation2d', () => {\n    it('should call tfOps.dilation2d', () => {\n      spyOn(tfOps, 'dilation2d');\n      node.op = 'Dilation2D';\n      node.inputParams['filter'] = createTensorAttr(1);\n      node.attrParams['strides'] = createNumericArrayAttr([1, 1, 1, 1]);\n      node.attrParams['pad'] = createStrAttr('same');\n      node.attrParams['dilations'] = createNumericArrayAttr([1, 2, 2, 1]);\n\n      const input1 = [tfOps.scalar(1.0)];\n      const input2 = [tfOps.scalar(1.0)];\n      node.inputNames = ['input1', 'input2'];\n\n      executeOp(node, {input1, input2}, context);\n\n      expect(tfOps.dilation2d)\n          .toHaveBeenCalledWith(\n              input1[0], input2[0], [1, 1], 'same', [2, 2], 'NHWC');\n    });\n  });\n});\n"]}